env:
  browser: true
  es2021: true
extends:
  - eslint:recommended
  - plugin:react/recommended
  - plugin:react-hooks/recommended
  - plugin:@typescript-eslint/recommended
  - prettier
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaFeatures:
    jsx: true
  ecmaVersion: 2018
  sourceType: module
plugins:
  - prettier
  - react
  - '@typescript-eslint'
rules:
  array-callback-return: ['error', { checkForEach: true }]
  arrow-body-style: 'error'
  camelcase: 'error'
  capitalized-comments: ['error', 'always', { 'ignoreConsecutiveComments': true }]
  consistent-this: ['error', 'that']
  curly: 'error'
  default-case: 'error'
  default-case-last: 'error'
  dot-notation: 'error'
  eqeqeq: 'error'
  guard-for-in: 'error'
  no-alert: 'error'
  no-caller: 'error'
  no-console: 'error'
  no-duplicate-imports: 'error'
  no-else-return: 'error'
  no-negated-condition: 'error'
  no-promise-executor-return: 'error'
  no-return-assign: 'error'
  no-self-compare: 'error'
  no-sequences: 'error'
  no-template-curly-in-string: 'error'
  no-underscore-dangle: 'error'
  no-unmodified-loop-condition: 'error'
  no-unneeded-ternary: 'error'
  no-unreachable-loop: 'error'
  no-use-before-define: 'error'
  no-useless-return: 'error'
  no-var: 'error'
  object-shorthand: 'error'
  prefer-arrow-callback: 'error'
  prefer-const: 'error'
  prefer-template: 'error'
  prettier/prettier: 'error'
  radix: 'error'
  react/jsx-fragments: 'error'
  react/jsx-no-useless-fragment: 'error'
  react/jsx-sort-props: ['error', { ignoreCase: true }]
  react/self-closing-comp: ['error', { html: false }]
  require-atomic-updates: 'error'
  sort-imports: ['error', { ignoreCase: true, ignoreDeclarationSort: true }]
  strict: ['error', 'never']
  yoda: 'error'
  '@typescript-eslint/no-shadow': 'error'
settings:
  react:
    version: detect
